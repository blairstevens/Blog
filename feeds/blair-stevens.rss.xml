<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Data_Snapshot - Blair Stevens</title><link>https://blairstevens.github.io/Blog/</link><description></description><lastBuildDate>Wed, 07 Aug 2019 12:52:00 -0400</lastBuildDate><item><title>parse_it</title><link>https://blairstevens.github.io/Blog/blog-5.html</link><description>&lt;p&gt;Configuration files are either something you hardly ever use, or they're something you wrestle with. If you're in the former camp you should start using them to make your models distributable and secure, and consider parse_it to do it. If you're in the latter camp you're here to see what …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Blair Stevens</dc:creator><pubDate>Wed, 07 Aug 2019 12:52:00 -0400</pubDate><guid isPermaLink="false">tag:blairstevens.github.io,2019-08-07:/Blog/blog-5.html</guid><category>misc</category><category>python</category></item><item><title>pymc-learn</title><link>https://blairstevens.github.io/Blog/blog-4.html</link><description>&lt;p&gt;pymc-learn is a package that brings bayesian models with a scikit-learn style implementation. Let's jump right into the code and explain it along the way. Our imports are fairly straightforward, leaning on sklearn to help us spoof up some data and matplotlib to show it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.datasets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;make_regression …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Blair Stevens</dc:creator><pubDate>Tue, 06 Aug 2019 13:05:00 -0400</pubDate><guid isPermaLink="false">tag:blairstevens.github.io,2019-08-06:/Blog/blog-4.html</guid><category>misc</category><category>python</category></item><item><title>Web Scraping</title><link>https://blairstevens.github.io/Blog/blog-3.html</link><description>&lt;p&gt;Somewhere in your data science journey you will need to scrape a webpage. This post will try to get you up and running as fast as possible. &lt;/p&gt;
&lt;p&gt;To start we need to import requests to look at the webpage, and BeautifulSoup to work with that data.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Blair Stevens</dc:creator><pubDate>Tue, 30 Jul 2019 12:55:00 -0400</pubDate><guid isPermaLink="false">tag:blairstevens.github.io,2019-07-30:/Blog/blog-3.html</guid><category>misc</category><category>python</category></item><item><title>Pipelines</title><link>https://blairstevens.github.io/Blog/blog-2.html</link><description>&lt;p&gt;Pipelines are great tools for duplicating efforts you’ve already made against a dataset, making them available to new information. It wraps up your data cleaning, your model, and any other intermediary steps all in one ordered operation.&lt;/p&gt;
&lt;p&gt;Let's start with a very simple data frame to work on.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Blair Stevens</dc:creator><pubDate>Wed, 03 Jul 2019 16:40:00 -0400</pubDate><guid isPermaLink="false">tag:blairstevens.github.io,2019-07-03:/Blog/blog-2.html</guid><category>misc</category><category>python</category></item><item><title>Lambda Functions</title><link>https://blairstevens.github.io/Blog/blog-1.html</link><description>&lt;p&gt;Lambda functions are an easy way to quickly define functions within Python. They are a departure from the regular def format for creating functions and can be confusing at first. Let’s begin with defining a simple square root function using the normal def syntax, and then converting it into …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Blair Stevens</dc:creator><pubDate>Tue, 18 Jun 2019 01:45:00 -0400</pubDate><guid isPermaLink="false">tag:blairstevens.github.io,2019-06-18:/Blog/blog-1.html</guid><category>misc</category><category>python</category></item></channel></rss>